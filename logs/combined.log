{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:09:28.298Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:09:28.523Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:09:55.497Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:09:55.507Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:14:57.656Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:14:57.666Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:22:40.188Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:22:40.201Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:23:54.265Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:23:54.275Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:25:23.289Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:25:23.300Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:27:29.801Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:27:29.814Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:30:16.045Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:30:16.058Z"}
{"message":"\u001b[0mGET / \u001b[32m200 \u001b[0m3.312 ms - 8\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:41:46.574Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:42:58.904Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:42:58.916Z"}
{"message":"\u001b[0mGET /user/register \u001b[33m404 \u001b[0m5.869 ms - 152\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:43:18.394Z"}
{"code":400,"msg":"authType is required","level":"\u001b[31merror\u001b[39m","message":"Error For Debugging  ====>  authType is required","stack":"Error: authType is required\n    at createNewUserController (D:\\Code_repos\\Kalenari_backend\\modules\\user\\userControllers.js:38:29)\n    at Layer.handle [as handle_request] (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at Layer.handle [as handle_request] (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:174:3)","timestamp":"2020-01-18T16:43:21.882Z"}
{"code":400,"msg":"authType is required","level":"\u001b[31merror\u001b[39m","timestamp":"2020-01-18T16:43:21.900Z"}
{"message":"\u001b[0mPOST /user/register \u001b[33m400 \u001b[0m24.611 ms - 79\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-18T16:43:21.906Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:10:52.762Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:10:52.818Z"}
{"code":400,"msg":"authType is required","level":"\u001b[31merror\u001b[39m","message":"Error For Debugging  ====>  authType is required","stack":"Error: authType is required\n    at createNewUserController (D:\\Code_repos\\Kalenari_backend\\modules\\user\\userControllers.js:38:29)\n    at Layer.handle [as handle_request] (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at Layer.handle [as handle_request] (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:174:3)","timestamp":"2020-01-19T07:17:22.632Z"}
{"code":400,"msg":"authType is required","level":"\u001b[31merror\u001b[39m","timestamp":"2020-01-19T07:17:22.634Z"}
{"message":"\u001b[0mPOST /user/register \u001b[33m400 \u001b[0m9.184 ms - 79\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:17:22.644Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Error For Debugging  ====>  validateRegisterInput is not defined","stack":"ReferenceError: validateRegisterInput is not defined\n    at createNewUserController (D:\\Code_repos\\Kalenari_backend\\modules\\user\\userControllers.js:17:45)\n    at Layer.handle [as handle_request] (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at Layer.handle [as handle_request] (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (D:\\Code_repos\\Kalenari_backend\\node_modules\\express\\lib\\router\\index.js:174:3)","timestamp":"2020-01-19T07:17:36.157Z"}
{"level":"\u001b[31merror\u001b[39m","timestamp":"2020-01-19T07:17:36.180Z"}
{"message":"\u001b[0mPOST /user/register \u001b[31m500 \u001b[0m25.057 ms - 79\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:17:36.182Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:19:38.376Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:19:38.388Z"}
{"message":"\u001b[0mPOST /user/register \u001b[33m422 \u001b[0m2.964 ms - 46\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:19:44.840Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:20:35.997Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:20:36.011Z"}
{"message":"\u001b[0mPOST /user/register \u001b[33m422 \u001b[0m3.201 ms - 46\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:20:40.065Z"}
{"message":"\u001b[0mPOST /user/register \u001b[33m422 \u001b[0m0.857 ms - 46\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:20:53.465Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:21:41.587Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:21:41.602Z"}
{"message":"\u001b[0mPOST /user/register \u001b[33m422 \u001b[0m5.209 ms - 46\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:21:44.461Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:21:57.115Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:21:57.125Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:22:13.791Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:22:13.801Z"}
{"message":"\u001b[0mPOST /user/register \u001b[33m422 \u001b[0m3.534 ms - 46\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:22:17.056Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:22:50.902Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:22:50.912Z"}
{"message":"\u001b[0mPOST /user/register \u001b[33m422 \u001b[0m19.895 ms - 159\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:22:54.386Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:23:14.848Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:23:14.858Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:24:22.673Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:24:22.685Z"}
{"message":"\u001b[0mPOST /user/register \u001b[33m422 \u001b[0m16.998 ms - 159\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:24:28.804Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:25:02.892Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:25:02.905Z"}
{"message":"\u001b[0mPOST /user/register \u001b[33m422 \u001b[0m28.729 ms - 159\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:25:16.606Z"}
{"message":"\u001b[0mPOST /user/register \u001b[33m422 \u001b[0m2.368 ms - 119\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:25:31.299Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:25:38.545Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:25:38.557Z"}
{"message":"\u001b[0mPOST /user/register \u001b[33m422 \u001b[0m9.526 ms - 119\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:25:57.771Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:26:49.439Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:26:49.449Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Error For Debugging  ====>  getNextSequence is not a function","stack":"TypeError: getNextSequence is not a function\n    at createNewUser (D:\\Code_repos\\Kalenari_backend\\modules\\user\\userServices.js:42:23)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)\n    at async createNewUserController (D:\\Code_repos\\Kalenari_backend\\modules\\user\\userControllers.js:31:24)","timestamp":"2020-01-19T07:28:06.225Z"}
{"level":"\u001b[31merror\u001b[39m","timestamp":"2020-01-19T07:28:06.226Z"}
{"message":"\u001b[0mPOST /user/register \u001b[31m500 \u001b[0m1755.898 ms - 79\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:28:06.229Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:28:34.999Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:28:35.009Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Error For Debugging  ====>  getNextSequence is not a function","stack":"TypeError: getNextSequence is not a function\n    at createNewUser (D:\\Code_repos\\Kalenari_backend\\modules\\user\\userServices.js:42:23)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)\n    at async createNewUserController (D:\\Code_repos\\Kalenari_backend\\modules\\user\\userControllers.js:31:24)","timestamp":"2020-01-19T07:28:43.539Z"}
{"level":"\u001b[31merror\u001b[39m","timestamp":"2020-01-19T07:28:43.540Z"}
{"message":"\u001b[0mPOST /user/register \u001b[31m500 \u001b[0m71.582 ms - 79\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:28:43.547Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:28:53.892Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:28:53.903Z"}
{"level":"\u001b[31merror\u001b[39m","message":"Error For Debugging  ====>  getNextSequence is not a function","stack":"TypeError: getNextSequence is not a function\n    at createNewUser (D:\\Code_repos\\Kalenari_backend\\modules\\user\\userServices.js:42:23)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)\n    at async createNewUserController (D:\\Code_repos\\Kalenari_backend\\modules\\user\\userControllers.js:31:24)","timestamp":"2020-01-19T07:28:59.202Z"}
{"level":"\u001b[31merror\u001b[39m","timestamp":"2020-01-19T07:28:59.203Z"}
{"message":"\u001b[0mPOST /user/register \u001b[31m500 \u001b[0m25.869 ms - 79\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:28:59.211Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:29:34.313Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:29:34.323Z"}
{"errors":{"fullName":{"message":"Path `fullName` is required.","name":"ValidatorError","properties":{"message":"Path `fullName` is required.","type":"required","path":"fullName"},"kind":"required","path":"fullName"}},"_message":"users validation failed","message":"Error For Debugging  ====>  users validation failed: fullName: Path `fullName` is required.","name":"ValidationError","level":"\u001b[31merror\u001b[39m","stack":"ValidationError: users validation failed: fullName: Path `fullName` is required.\n    at new ValidationError (D:\\Code_repos\\Kalenari_backend\\node_modules\\mongoose\\lib\\error\\validation.js:31:11)\n    at model.Document.invalidate (D:\\Code_repos\\Kalenari_backend\\node_modules\\mongoose\\lib\\document.js:2481:32)\n    at p.doValidate.skipSchemaValidators (D:\\Code_repos\\Kalenari_backend\\node_modules\\mongoose\\lib\\document.js:2330:17)\n    at D:\\Code_repos\\Kalenari_backend\\node_modules\\mongoose\\lib\\schematype.js:1064:9\n    at processTicksAndRejections (internal/process/task_queues.js:75:11)","timestamp":"2020-01-19T07:30:02.314Z"}
{"errors":{"fullName":{"message":"Path `fullName` is required.","name":"ValidatorError","properties":{"message":"Path `fullName` is required.","type":"required","path":"fullName"},"kind":"required","path":"fullName"}},"_message":"users validation failed","message":"users validation failed: fullName: Path `fullName` is required.","name":"ValidationError","level":"\u001b[31merror\u001b[39m","timestamp":"2020-01-19T07:30:02.327Z"}
{"message":"\u001b[0mPOST /user/register \u001b[31m500 \u001b[0m123.657 ms - 79\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:30:02.337Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:31:51.358Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:31:51.370Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:32:37.504Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:32:37.518Z"}
{"errors":{"fullName":{"message":"Path `fullName` is required.","name":"ValidatorError","properties":{"message":"Path `fullName` is required.","type":"required","path":"fullName"},"kind":"required","path":"fullName"}},"_message":"users validation failed","message":"Error For Debugging  ====>  users validation failed: fullName: Path `fullName` is required.","name":"ValidationError","level":"\u001b[31merror\u001b[39m","stack":"ValidationError: users validation failed: fullName: Path `fullName` is required.\n    at new ValidationError (D:\\Code_repos\\Kalenari_backend\\node_modules\\mongoose\\lib\\error\\validation.js:31:11)\n    at model.Document.invalidate (D:\\Code_repos\\Kalenari_backend\\node_modules\\mongoose\\lib\\document.js:2481:32)\n    at p.doValidate.skipSchemaValidators (D:\\Code_repos\\Kalenari_backend\\node_modules\\mongoose\\lib\\document.js:2330:17)\n    at D:\\Code_repos\\Kalenari_backend\\node_modules\\mongoose\\lib\\schematype.js:1064:9\n    at processTicksAndRejections (internal/process/task_queues.js:75:11)","timestamp":"2020-01-19T07:32:40.375Z"}
{"errors":{"fullName":{"message":"Path `fullName` is required.","name":"ValidatorError","properties":{"message":"Path `fullName` is required.","type":"required","path":"fullName"},"kind":"required","path":"fullName"}},"_message":"users validation failed","message":"users validation failed: fullName: Path `fullName` is required.","name":"ValidationError","level":"\u001b[31merror\u001b[39m","timestamp":"2020-01-19T07:32:40.377Z"}
{"message":"\u001b[0mPOST /user/register \u001b[31m500 \u001b[0m46.249 ms - 79\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:32:40.402Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:33:34.296Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:33:34.306Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:33:47.753Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:33:47.764Z"}
{"errors":{"fullName":{"message":"Path `fullName` is required.","name":"ValidatorError","properties":{"message":"Path `fullName` is required.","type":"required","path":"fullName"},"kind":"required","path":"fullName"}},"_message":"users validation failed","message":"Error For Debugging  ====>  users validation failed: fullName: Path `fullName` is required.","name":"ValidationError","level":"\u001b[31merror\u001b[39m","stack":"ValidationError: users validation failed: fullName: Path `fullName` is required.\n    at new ValidationError (D:\\Code_repos\\Kalenari_backend\\node_modules\\mongoose\\lib\\error\\validation.js:31:11)\n    at model.Document.invalidate (D:\\Code_repos\\Kalenari_backend\\node_modules\\mongoose\\lib\\document.js:2481:32)\n    at p.doValidate.skipSchemaValidators (D:\\Code_repos\\Kalenari_backend\\node_modules\\mongoose\\lib\\document.js:2330:17)\n    at D:\\Code_repos\\Kalenari_backend\\node_modules\\mongoose\\lib\\schematype.js:1064:9\n    at processTicksAndRejections (internal/process/task_queues.js:75:11)","timestamp":"2020-01-19T07:33:51.583Z"}
{"errors":{"fullName":{"message":"Path `fullName` is required.","name":"ValidatorError","properties":{"message":"Path `fullName` is required.","type":"required","path":"fullName"},"kind":"required","path":"fullName"}},"_message":"users validation failed","message":"users validation failed: fullName: Path `fullName` is required.","name":"ValidationError","level":"\u001b[31merror\u001b[39m","timestamp":"2020-01-19T07:33:51.587Z"}
{"message":"\u001b[0mPOST /user/register \u001b[31m500 \u001b[0m53.800 ms - 79\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:33:51.604Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:34:30.867Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:34:30.878Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:34:42.441Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:34:42.451Z"}
{"message":"\u001b[0mPOST /user/register \u001b[32m201 \u001b[0m137.814 ms - 343\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:34:46.866Z"}
{"message":"\u001b[0mPOST /user/register \u001b[32m201 \u001b[0m105.185 ms - 343\u001b[0m\n","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:35:04.029Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:51:56.071Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:51:56.714Z"}
{"message":"server started at port 5000","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:53:32.212Z"}
{"message":"Connected to MongoDB","level":"\u001b[32minfo\u001b[39m","timestamp":"2020-01-19T07:53:32.227Z"}
